{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "An element with a mixin",
      "summary": "",
      "path": "px-vis-paired-bar.html",
      "properties": [
        {
          "name": "preventWebWorkerSynchronization",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 10
            },
            "end": {
              "line": 355,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "xAxisType",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 10
            },
            "end": {
              "line": 360,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "\"linear\""
        },
        {
          "name": "yAxisType",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 361,
              "column": 10
            },
            "end": {
              "line": 365,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "\"scaleBand\""
        },
        {
          "name": "_rightX",
          "type": "Function",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 366,
              "column": 10
            },
            "end": {
              "line": 366,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_leftX",
          "type": "Function",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 10
            },
            "end": {
              "line": 367,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_domainChanged",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 10
            },
            "end": {
              "line": 371,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "seriesConfig",
          "type": "Object",
          "description": "A configuration file to associate series data keys, name, type, and colors.\n\nProvide two series, one for the left, one for the right.\n\n```\n {\n    \"left\": {  //seriesKey is a unique identifier for the configuration\n        \"name\": \"My Series\",  //human readable name\n        \"x\": \"male\",  //index or key name for dependent variable\n        \"y\": \"age\",  //index or key name for independent variable\n        \"xAxisUnit\": \"People\" //Unit to be used for the X axis.\n        \"hideInRegister\": true, //dont show in the register\n        \"color\": \"rgb(0,255,0)\" //color you want for the series\n    },\n    \"right\": {  //seriesKey is a unique identifier for the configuration\n        \"name\": \"My Series\",  //human readable name\n        \"x\": \"female\",  //index or key name for dependent variable\n        \"y\": \"age\",  //index or key name for independent variable\n        \"xAxisUnit\": \"People\" //Unit to be used for the X axis.\n        \"hideInRegister\": true, //dont show in the register\n        \"color\": \"rgb(255,0,0)\" //color you want for the series\n    }\n }\n```",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 399,
              "column": 10
            },
            "end": {
              "line": 399,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_seriesKeys",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 400,
              "column": 10
            },
            "end": {
              "line": 400,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_leftData",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 401,
              "column": 10
            },
            "end": {
              "line": 401,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_rightData",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 402,
              "column": 10
            },
            "end": {
              "line": 402,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "startFromZero",
          "type": "boolean",
          "description": "DO NOT CHANGE THIS UNLESS YOU KNOW WHAT YOU ARE DOING\n\nBar charts in nearly all cases should start from 0. If you have a special case and understand the ramifications, change this to false to allow it to use the `min` value from your data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 408,
              "column": 10
            },
            "end": {
              "line": 411,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "rightReferenceConfig",
          "type": "Object",
          "description": "A configuration object needed to draw reference curves. Format is similar to seriesConfig. Valid entries:\n- `x` : default: 'x'\n- `y`: default: 'y'\n- `interpolationFunction` : default: Px.d3.curveCardinal\n- `color` :\n- `strokeWidth` default: 1",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 421,
              "column": 10
            },
            "end": {
              "line": 421,
              "column": 38
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "leftReferenceConfig",
          "type": "Object",
          "description": "A configuration object needed to draw reference curves. Format is similar to seriesConfig. Valid entries:\n- `x` : default: 'x'\n- `y`: default: 'y'\n- `interpolationFunction` : default: Px.d3.curveCardinal\n- `color` :\n- `strokeWidth` default: 1",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 10
            },
            "end": {
              "line": 431,
              "column": 37
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "referenceData",
          "type": "Array",
          "description": "Data to create reference curves. Format matches chartData and requires a referenceConfig with similar props to seriesConfig. Supply data for both left and right in this array",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 10
            },
            "end": {
              "line": 436,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 457,
              "column": 6
            },
            "end": {
              "line": 462,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_debounce",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 464,
              "column": 6
            },
            "end": {
              "line": 469,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "cb"
            },
            {
              "name": "time"
            }
          ]
        },
        {
          "name": "_onIronResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 471,
              "column": 6
            },
            "end": {
              "line": 477,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onIronResizeDebounced",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 479,
              "column": 6
            },
            "end": {
              "line": 505,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setSeriesConfigs",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 507,
              "column": 6
            },
            "end": {
              "line": 546,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setSecondScale",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 548,
              "column": 6
            },
            "end": {
              "line": 568,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_createStacks",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 570,
              "column": 6
            },
            "end": {
              "line": 581,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getOrdSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 583,
              "column": 6
            },
            "end": {
              "line": 589,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_calcTooltipPos",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 591,
              "column": 6
            },
            "end": {
              "line": 606,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_fixTitleLocation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 608,
              "column": 6
            },
            "end": {
              "line": 617,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_xAxisConfigChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 619,
              "column": 6
            },
            "end": {
              "line": 629,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "conf"
            }
          ]
        },
        {
          "name": "_yAxisConfigChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 631,
              "column": 6
            },
            "end": {
              "line": 638,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "conf"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 347,
          "column": 4
        },
        "end": {
          "line": 640,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "PxVisPairedBar",
      "attributes": [
        {
          "name": "prevent-web-worker-synchronization",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 10
            },
            "end": {
              "line": 355,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "x-axis-type",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 10
            },
            "end": {
              "line": 360,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "y-axis-type",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 361,
              "column": 10
            },
            "end": {
              "line": 365,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "series-config",
          "description": "A configuration file to associate series data keys, name, type, and colors.\n\nProvide two series, one for the left, one for the right.\n\n```\n {\n    \"left\": {  //seriesKey is a unique identifier for the configuration\n        \"name\": \"My Series\",  //human readable name\n        \"x\": \"male\",  //index or key name for dependent variable\n        \"y\": \"age\",  //index or key name for independent variable\n        \"xAxisUnit\": \"People\" //Unit to be used for the X axis.\n        \"hideInRegister\": true, //dont show in the register\n        \"color\": \"rgb(0,255,0)\" //color you want for the series\n    },\n    \"right\": {  //seriesKey is a unique identifier for the configuration\n        \"name\": \"My Series\",  //human readable name\n        \"x\": \"female\",  //index or key name for dependent variable\n        \"y\": \"age\",  //index or key name for independent variable\n        \"xAxisUnit\": \"People\" //Unit to be used for the X axis.\n        \"hideInRegister\": true, //dont show in the register\n        \"color\": \"rgb(255,0,0)\" //color you want for the series\n    }\n }\n```",
          "sourceRange": {
            "start": {
              "line": 399,
              "column": 10
            },
            "end": {
              "line": 399,
              "column": 30
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "start-from-zero",
          "description": "DO NOT CHANGE THIS UNLESS YOU KNOW WHAT YOU ARE DOING\n\nBar charts in nearly all cases should start from 0. If you have a special case and understand the ramifications, change this to false to allow it to use the `min` value from your data",
          "sourceRange": {
            "start": {
              "line": 408,
              "column": 10
            },
            "end": {
              "line": 411,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "right-reference-config",
          "description": "A configuration object needed to draw reference curves. Format is similar to seriesConfig. Valid entries:\n- `x` : default: 'x'\n- `y`: default: 'y'\n- `interpolationFunction` : default: Px.d3.curveCardinal\n- `color` :\n- `strokeWidth` default: 1",
          "sourceRange": {
            "start": {
              "line": 421,
              "column": 10
            },
            "end": {
              "line": 421,
              "column": 38
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "left-reference-config",
          "description": "A configuration object needed to draw reference curves. Format is similar to seriesConfig. Valid entries:\n- `x` : default: 'x'\n- `y`: default: 'y'\n- `interpolationFunction` : default: Px.d3.curveCardinal\n- `color` :\n- `strokeWidth` default: 1",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 10
            },
            "end": {
              "line": 431,
              "column": 37
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "reference-data",
          "description": "Data to create reference curves. Format matches chartData and requires a referenceConfig with similar props to seriesConfig. Supply data for both left and right in this array",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 10
            },
            "end": {
              "line": 436,
              "column": 30
            }
          },
          "metadata": {},
          "type": "Array"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-vis-paired-bar",
      "mixins": [
        "Polymer.mixinBehaviors"
      ]
    }
  ]
}
